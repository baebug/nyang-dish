services:
  db-prod:
    build:
      context: .
      dockerfile: Dockerfile-dbprod
    container_name: db-prod
    restart: always
    environment:
      TZ: Asia/Seoul
    env_file:
      - db-prod.env
    volumes:
      - /home/ubuntu/.dbdata-prod:/var/lib/mysql
      - /home/ubuntu/my.cnf:/etc/mysql/my.cnf
    ports:
      - "9404:3306"
    networks:
      - mynetwork

  back-prod:
    build:
      context: ourkitty
      dockerfile: Dockerfile
    container_name: nyang-back-prod
    depends_on:
      - db-prod
    restart: always
    environment:
      - TZ=Asia/Seoul
    ports:
      - '8031:8080'
    env_file:
      - back-prod.env
    networks:
      - mynetwork
  
  front-prod:
    build:
      context: frontend
      dockerfile: Dockerfile
    container_name: nyang-front-prod
    depends_on:
      - back-prod
    restart: always
    environment:
      - TZ=Asia/Seoul
    ports:
      - '3033:3000'
    env_file:
      - front-prod.env
    networks:
      - mynetwork

  landing-prod:
    build:
      context: landing
      dockerfile: Dockerfile
    container_name: nyang-landing-prod
    depends_on:
      - back-prod
    restart: always
    environment:
      - TZ=Asia/Seoul
    ports:
      - '3043:3000'
    env_file:
      - landing-prod.env
    networks:
      - mynetwork

networks:
  mynetwork:
    name: prod